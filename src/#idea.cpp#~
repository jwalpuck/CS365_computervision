// A function to get the pixel locations for items in the region
int *getRegionLocations( cv::Mat &boundingBox, cv::Mat &regMap, int idx ){
  // This might be better to return a list of points   
  int tempx, tempy;
  tempx = boundingBox.at<int>(idx, 3) - boundingBox.at<int>(idx, 1);
  tempy = boundingBox.at<int>(idx, 2) - boundingBox.at<int>(idx, 0);  

  // create a list of points that are in the region
  int *regionIdxs = (int *)malloc(sizeof( int ) * tempx * tempy * 2);

  int x = 0;
  int y = 0; 
  for( int i = 0; i < (tempx * tempy) - 1; i++){
    regionIdxs[i * 2] = x + boundingBox.at<int>(idx, 1);
    regionIdxs[i * 2 + 1] = y + boundingBox.at<int>(idx, 0);

    if( debug ){
      printf("boxStartX: %d boxStartY: %d boxEndX: %d boxEndY: %d x: %d y: %d \n",boundingBox.at<int>(idx, 1), boundingBox.at<int>(idx, 0), boundingBox.at<int>(idx, 3), boundingBox.at<int>(idx, 2) ,regionIdxs[i*2], regionIdxs[i*2+1]);
    }

    // this increments the row and column counters to get the correct positions
    if( i%tempx == 0 ){
      x++;
      y = 0;
    }else{
      y++;
    }
  }
  return( regionIdxs );
}